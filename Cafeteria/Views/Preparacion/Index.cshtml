@model List<Cafeteria.Controllers.PedidoAgrupadoViewModel>

@{
    ViewBag.Title = "Preparación y Entrega";
}

<h2 class="mb-4">PREPARACIÓN Y ENTREGA</h2>

<div style="display: flex; gap: 20px;">
    <!-- Lista de Pedidos -->
    <div style="width: 40%;">
        @foreach (var pedido in Model)
        {
            var colorFondo = pedido.Estado == "Preparación" ? "#facc15" : (pedido.Estado == "Entregado" ? "#4ade80" : "#f3f4f6");
            var textoColor = pedido.Estado == "Preparación" ? "black" : "black";
            <div class="pedido-btn" style="
                    background-color:@colorFondo;
                    padding:10px;
                    border-radius:5px;
                    margin-bottom:8px;
                    cursor:pointer;
                    color:@textoColor;
                "
                 onclick="mostrarProductos(@pedido.IdPedido)">
                <strong>@pedido.NombreCliente</strong> - Pedido #@pedido.IdPedido
            </div>
        }
    </div>

    <!-- Detalle del Pedido Seleccionado -->
    <div style="width: 60%;">
        <h4>Productos:</h4>
        <div id="productos-container" style="margin-top:10px;"></div>

        <div id="botones-cambio-estado" style="display: none; margin-top: 20px;">
            <button class="btn btn-warning" onclick="cambiarEstado('Preparación')">Preparación</button>
            <button class="btn btn-success" onclick="cambiarEstado('Entregado')">Entregar</button>
        </div>
    </div>
</div>

@section scripts {
    <script>
        let pedidos = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
        let pedidoSeleccionado = null;

        function mostrarProductos(idPedido) {
            const pedido = pedidos.find(p => p.IdPedido === idPedido);
            if (!pedido) return;

            pedidoSeleccionado = pedido;
            const contenedor = document.getElementById('productos-container');
            contenedor.innerHTML = '';

            pedido.Productos.forEach(p => {
                const div = document.createElement('div');
                div.style.marginBottom = '10px';
                div.innerHTML = `<strong>${p.NombreProducto}</strong><br><small>${p.Ingredientes}</small>`;
                contenedor.appendChild(div);
            });

            document.getElementById('botones-cambio-estado').style.display = 'block';
        }

        function cambiarEstado(nuevoEstado) {
            if (!pedidoSeleccionado) return;

            fetch('/Preparacion/CambiarEstado', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify({ idPedido: pedidoSeleccionado.IdPedido, nuevoEstado })
            }).then(response => {
                if (response.ok) {
                    location.reload(); // Refrescar la vista para ver el nuevo color
                } else {
                    alert('Error al actualizar el estado.');
                }
            });
        }
    </script>
}
